<p style="color: green"><%= notice %></p>

<h1>Wallet Connect using MetaMask</h1>
<div class="error"></div>
<button type="button" class="enableEthereumButton">Enable Ethereum</button>
<h2><strong>Account:</strong> <span class="showAccount"></span></h2>
<h2><strong>Balance: </strong><span class="balance" id="balance"></span></h2>
<!-- component -->
<link rel="stylesheet" href="https://cdn.tailgrids.com/tailgrids-fallback.css" />

<form class="w-full max-w-sm">
  <div class="flex items-center border-b border-teal-500 py-2">
    <input id="wallet_address" class="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none" type="text" placeholder="enter wallet address" aria-label="Full name">
    <button onClick="searchMetamask()" class="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded" type="button">
      Get balance
    </button>
    
  </div>
</form>




<form class="w-full max-w-sm">
  <div class="flex items-center border-b border-teal-500 py-2">
    <input id="wallet_address_tr" class="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none" type="text" placeholder="enter wallet address" aria-label="Full name">

     <input id="amount" class="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none" type="text" placeholder="enter amount" aria-label="amount">

    <button onClick="transferAmount()" class="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded" type="button">
      Transfer EATH
    </button>
    
  </div>
</form>




<script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js"></script>
<script>
const ethereumButton = document.querySelector('.enableEthereumButton');
const showAccount = document.querySelector('.showAccount');
const error_wallet = document.querySelector('.error');
    let balance=0;

ethereumButton.addEventListener('click', () => {
  if (typeof window.ethereum !== 'undefined') {
           getAccount();
       } else {
           console.log('Please install MetaMask');
             error_wallet.innerHTML = 'Please install MetaMask';

       }
});

function searchMetamask(){
  if (typeof window.ethereum !== 'undefined') {
           const address= $('#wallet_address').val();
           web3 = new Web3(window.ethereum);
           web3.eth.getBalance(address, function (error, wei) {
              if (!error) {
                balance = web3.utils.fromWei(wei, 'ether');
                  document.getElementById("balance").innerHTML = balance + " ETH";
                  showAccount.innerHTML=address;
              }
          });
       } else {
           console.log('Please install MetaMask');
             error_wallet.innerHTML = 'Please install MetaMask';

       }
}



// 0x4146E0fD70eDf94874dc6C459360717141C86cB1
async function transferAmount(){
  if (typeof window.ethereum !== 'undefined') {
           const address = $('#wallet_address_tr').val();
           const amount =  $('#amount').val();

           web3 = new Web3(window.ethereum);
           const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
          const account = accounts[0];
          let tranacton_data=  web3.eth.sendTransaction({to: address, from: account, value: amount*1000000000000000000});
          if(tranacton_data)
          {
            error_wallet.innerHTML = 'Amount successfully  transered';
          }

       } else {
             error_wallet.innerHTML = 'Please install MetaMask';

       }
}

async function getAccount() {
    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
    web3 = new Web3(window.ethereum);
    const account = accounts[0];
    showAccount.innerHTML = account;

  // get balance of metamask wallet

    web3.eth.getBalance(account, function (error, wei) {
              if (!error) {
                balance = web3.utils.fromWei(wei, 'ether');
                  document.getElementById("balance").innerHTML = balance + " ETH";
              }
          });


}
</script>
